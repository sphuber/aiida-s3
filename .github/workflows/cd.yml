name: cd

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+*

jobs:

  validate-release-tag:

    if: github.repository == 'sphuber/aiida-s3'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Validate the tag version against the package version
      run: python .github/workflows/validate_release_tag.py $GITHUB_REF

  pre-commit:

    needs: [validate-release-tag]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Install Python package and dependencies
      run: pip install -e .[pre-commit,tests]

    - name: Run pre-commit
      run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  tests:

    needs: [validate-release-tag]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    services:
      minio:
        image: minio/minio:edge-cicd
        volumes:
        - /data
        ports:
        - 9000:9000
        env:
          MINIO_ACCESS_KEY: minio-access-key
          MINIO_SECRET_KEY: minio-secret-key

    steps:
    - uses: actions/checkout@v2

    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Install Python package and dependencies
      run: pip install -e .[tests]

    - name: Run pytest
      env:
        AIIDA_S3_MOCK_S3: false
        AIIDA_S3_BUCKET_NAME: minio-bucket
        AIIDA_S3_ENDPOINT_URL: http://localhost:9000
        AIIDA_S3_ACCESS_KEY_ID: minio-access-key
        AIIDA_S3_SECRET_ACCESS_KEY: minio-secret-key
      run: pytest -sv tests

  publish:

    name: Publish to PyPI
    needs: [pre-commit, tests]
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install flit
      run: pip install flit~=3.4

    - name: Build and publish
      run: flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
