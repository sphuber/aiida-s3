[build-system]
build-backend = 'flit_core.buildapi'
requires = ['flit_core>=3.4,<4']

[project]
authors = [
  {name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'}
]
classifiers = [
  'Development Status :: 4 - Beta',
  'Framework :: AiiDA',
  'License :: OSI Approved :: MIT License',
  'Operating System :: POSIX :: Linux',
  'Operating System :: MacOS :: MacOS X',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Topic :: Scientific/Engineering'
]
dependencies = [
  'aiida-core~=2.4',
  'azure-storage-blob',
  'boto3'
]
dynamic = ['description', 'version']
keywords = ['aiida', 'workflows', 's3']
license = {file = 'LICENSE.txt'}
name = 'aiida-s3'
readme = 'README.md'
requires-python = '>=3.9'

[project.entry-points.'aiida.storage']
's3.psql_aws_s3' = 'aiida_s3.storage.psql_aws_s3:PsqlAwsS3Storage'
's3.psql_azure_blob' = 'aiida_s3.storage.psql_azure_blob:PsqlAzureBlobStorage'
's3.psql_s3' = 'aiida_s3.storage.psql_s3:PsqlS3Storage'

[project.optional-dependencies]
pre-commit = [
  'mypy==0.981',
  'pre-commit~=2.17',
  'types-pyyaml'
]
tests = [
  'moto[s3]',
  'pgtest~=1.3,>=1.3.1',
  'pytest~=7.2'
]

[project.scripts]
aiida-s3 = "aiida_s3.cli:cmd_root"

[project.urls]
changelog = 'https://github.com/sphuber/aiida-s3/blob/master/CHANGELOG.md'
documentation = 'https://github.com/sphuber/aiida-s3/blob/master/README.md'
source = 'https://github.com/sphuber/aiida-s3'
tracker = 'https://github.com/sphuber/aiida-s3/issues'

[tool.flit.module]
name = 'aiida_s3'

[tool.flit.sdist]
exclude = [
  '.github/',
  '.gitignore',
  '.pre-commit-config.yaml',
  'tests/'
]

[tool.flynt]
fail-on-change = true
line-length = 120

[tool.mypy]
check_untyped_defs = true
no_warn_no_return = true
scripts_are_modules = true
show_error_codes = true
show_traceback = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
check_untyped_defs = true
module = 'aiida_s3.*'

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  'azure.*',
  'boto3.*',
  'botocore.*',
  'moto.*',
  'pymatgen.*',
  'pgtest.*',
  'ruamel.*'
]

[tool.pytest.ini_options]
filterwarnings = [
  'ignore:Creating AiiDA configuration folder.*:UserWarning'
]
markers = [
  'skip_if_azure_mocked: Skip if the Azure client is mocked, which is not supporte yet'
]

[tool.ruff]
ignore = [
  'D203',  # Incompatible with D211 `no-blank-line-before-class`
  'D213'  # Incompatible with D212 `multi-line-summary-second-line`
]
line-length = 120
select = [
  'E',  # pydocstyle
  'W',  # pydocstyle
  'F',  # pyflakes
  'I',  # isort
  'N',  # pep8-naming
  'D',  # pydocstyle
  'PLC',  # pylint-convention
  'PLE',  # pylint-error
  'PLR',  # pylint-refactor
  'PLW',  # pylint-warning
  'RUF'  # ruff
]

[tool.ruff.format]
quote-style = 'single'
