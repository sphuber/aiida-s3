[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-s3'
dynamic = ['description', 'version']
authors = [
    {name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 3 - Alpha',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Scientific/Engineering'
]
keywords = ['aiida', 'workflows', 's3']
requires-python = '>=3.8'
dependencies = [
    'aiida-core~=2.1',
    'boto3',
]

[project.urls]
Source = 'https://github.com/sphuber/aiida-s3'

[project.optional-dependencies]
pre-commit = [
    'mypy==0.941',
    'pre-commit~=2.17',
    'pylint~=2.12.2',
    'pylint-aiida~=0.1.1',
]
tests = [
    'moto[s3]',
    'pgtest~=1.3,>=1.3.1',
    'pytest~=6.2',
]

[project.entry-points.'aiida.storage']
's3.psql_aws_s3' = 'aiida_s3.storage.psql_aws_s3:PsqlAwsS3Storage'

[tool.flit.module]
name = 'aiida_s3'

[tool.flit.sdist]
exclude = [
    '.github/',
    '.gitignore',
    '.pre-commit-config.yaml',
    'tests/',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.mypy]
show_error_codes = true
check_untyped_defs = true
scripts_are_modules = true
warn_unused_ignores = true
warn_redundant_casts = true
no_warn_no_return = true
show_traceback = true

[[tool.mypy.overrides]]
module = 'aiida_s3.*'
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    'boto3.*',
    'botocore.*',
    'pymatgen.*',
    'ruamel.*',
]
ignore_missing_imports = true

[tool.pydocstyle]
ignore = [
    'D104',
    'D203',
    'D213'
]

[tool.pylint.master]
load-plugins = ['pylint_aiida']

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'bad-continuation',
    'duplicate-code',
    'import-outside-toplevel',
    'too-many-arguments',
]

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true
